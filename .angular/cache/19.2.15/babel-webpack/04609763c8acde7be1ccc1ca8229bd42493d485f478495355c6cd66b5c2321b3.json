{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/question.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"thinking-phase\": a0\n});\nconst _c1 = a0 => ({\n  \"warning\": a0\n});\nfunction InterviewComponent_div_10_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"label\")(2, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function InterviewComponent_div_10_div_6_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.selectedAnswer, $event) || (ctx_r2.selectedAnswer = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", option_r4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.selectedAnswer);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction InterviewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 17);\n    i0.ɵɵtemplate(6, InterviewComponent_div_10_div_6_Template, 4, 3, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function InterviewComponent_div_10_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitAnswer());\n    });\n    i0.ɵɵtext(8, \"Submit Answer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Question \", ctx_r2.currentQuestionIndex + 1, \" of \", ctx_r2.questions.length, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentQuestion.question, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.currentQuestion.options);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.selectedAnswer);\n  }\n}\nfunction InterviewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"h2\");\n    i0.ɵɵtext(3, \"Thinking Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Take a moment to prepare for the next question\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction InterviewComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please answer the question above\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Get ready for the next question\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class InterviewComponent {\n  constructor(questionService, router, ngZone) {\n    this.questionService = questionService;\n    this.router = router;\n    this.ngZone = ngZone;\n    this.questions = [];\n    this.currentQuestionIndex = 0;\n    this.countdown = 10;\n    this.isThinkingPhase = false;\n    this.isInterviewActive = false;\n    this.questionsSubscription = new Subscription();\n    this.selectedAnswer = null;\n    // Stats tracking\n    this.correctAnswersCount = 0;\n    this.answeredCount = 0;\n    this.startTime = 0;\n    this.endTime = 0;\n  }\n  ngOnInit() {\n    this.enterFullScreen();\n    this.loadQuestions();\n  }\n  ngOnDestroy() {\n    this.exitFullScreen();\n    this.clearTimer();\n    this.questionsSubscription.unsubscribe();\n  }\n  onFocusLoss() {\n    if (this.isInterviewActive) {\n      this.terminateInterview();\n    }\n  }\n  loadQuestions() {\n    this.questionsSubscription = this.questionService.getRandomQuestions().subscribe({\n      next: questions => {\n        this.questions = questions;\n        this.startInterview();\n      },\n      error: error => {\n        console.error('Error loading questions:', error);\n        alert('Failed to load questions. Please try again.');\n        this.router.navigate(['/']);\n      }\n    });\n  }\n  startInterview() {\n    this.isInterviewActive = true;\n    this.correctAnswersCount = 0;\n    this.answeredCount = 0;\n    this.startTime = Date.now();\n    this.startQuestionTimer();\n  }\n  startQuestionTimer() {\n    this.clearTimer();\n    this.countdown = 10;\n    this.isThinkingPhase = false;\n    this.countdownInterval = setInterval(() => {\n      this.ngZone.run(() => {\n        this.countdown--;\n        if (this.countdown <= 0) {\n          this.nextQuestion();\n        }\n      });\n    }, 1000);\n  }\n  // Answer submission and tracking\n  answerQuestion(isCorrect) {\n    this.answeredCount++;\n    if (isCorrect) {\n      this.correctAnswersCount++;\n    }\n    this.selectedAnswer = null;\n    this.nextQuestion();\n  }\n  submitAnswer() {\n    if (this.selectedAnswer == null) return;\n    const current = this.currentQuestion;\n    const isCorrect = !!current && this.selectedAnswer === current?.correctAnswer;\n    this.answerQuestion(!!isCorrect);\n  }\n  nextQuestion() {\n    this.clearTimer();\n    if (this.currentQuestionIndex < this.questions.length - 1) {\n      this.isThinkingPhase = true;\n      setTimeout(() => {\n        this.isThinkingPhase = false;\n        this.currentQuestionIndex++;\n        this.startQuestionTimer();\n      }, 1500);\n    } else {\n      this.completeInterview();\n    }\n  }\n  completeInterview() {\n    this.isInterviewActive = false;\n    this.clearTimer();\n    this.endTime = Date.now();\n    localStorage.setItem('interviewCompleted', 'true');\n    localStorage.removeItem('interviewStarted');\n    // Save stats to localStorage\n    localStorage.setItem('interviewStats', JSON.stringify({\n      correctAnswers: this.correctAnswersCount,\n      answered: this.answeredCount,\n      total: this.questions.length,\n      duration: Math.floor((this.endTime - this.startTime) / 1000) // in seconds\n    }));\n    this.router.navigate(['/final']);\n  }\n  terminateInterview() {\n    this.isInterviewActive = false;\n    this.clearTimer();\n    this.endTime = Date.now();\n    localStorage.setItem('interviewCompleted', 'true');\n    localStorage.removeItem('interviewStarted');\n    // Save stats to localStorage\n    localStorage.setItem('interviewStats', JSON.stringify({\n      correctAnswers: this.correctAnswersCount,\n      answered: this.answeredCount,\n      total: this.questions.length,\n      duration: Math.floor((this.endTime - this.startTime) / 1000) // in seconds\n    }));\n    alert('Interview terminated due to focus loss. You will be redirected to the final screen.');\n    this.router.navigate(['/final']);\n  }\n  clearTimer() {\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n      this.countdownInterval = null;\n    }\n  }\n  enterFullScreen() {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      const result = elem.requestFullscreen();\n      if (result && typeof result.catch === 'function') {\n        result.catch(err => {\n          console.log('Failed to enter fullscreen:', err);\n        });\n      }\n    }\n  }\n  exitFullScreen() {\n    if (document.exitFullscreen && document.fullscreenElement) {\n      document.exitFullscreen().catch(err => {\n        console.log('Failed to exit fullscreen:', err);\n      });\n    }\n  }\n  get currentQuestion() {\n    return this.questions[this.currentQuestionIndex] || null;\n  }\n  get progress() {\n    return (this.currentQuestionIndex + 1) / this.questions.length * 100;\n  }\n  static {\n    this.ɵfac = function InterviewComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InterviewComponent)(i0.ɵɵdirectiveInject(i1.QuestionService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InterviewComponent,\n      selectors: [[\"app-interview\"]],\n      hostBindings: function InterviewComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"blur\", function InterviewComponent_blur_HostBindingHandler($event) {\n            return ctx.onFocusLoss($event);\n          }, false, i0.ɵɵresolveWindow)(\"beforeunload\", function InterviewComponent_beforeunload_HostBindingHandler($event) {\n            return ctx.onFocusLoss($event);\n          }, false, i0.ɵɵresolveWindow)(\"visibilitychange\", function InterviewComponent_visibilitychange_HostBindingHandler($event) {\n            return ctx.onFocusLoss($event);\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      decls: 18,\n      vars: 13,\n      consts: [[1, \"interview-container\", \"fullscreen-overlay\", 3, \"ngClass\"], [1, \"interview-header\"], [1, \"progress-bar\"], [1, \"progress-fill\"], [1, \"timer-section\"], [1, \"timer\", 3, \"ngClass\"], [1, \"timer-label\"], [1, \"interview-content\"], [\"class\", \"question-section\", 4, \"ngIf\"], [\"class\", \"thinking-section\", 4, \"ngIf\"], [1, \"interview-footer\"], [1, \"instruction-text\"], [4, \"ngIf\"], [1, \"warning-text\"], [1, \"question-section\"], [1, \"question-number\"], [1, \"question-text\", \"fade-in\"], [1, \"answer-options\"], [\"class\", \"option-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [1, \"option-item\"], [\"type\", \"radio\", \"name\", \"answer\", 3, \"ngModelChange\", \"value\", \"ngModel\"], [1, \"thinking-section\"], [1, \"thinking-text\", \"fade-in\"]],\n      template: function InterviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"span\", 6);\n          i0.ɵɵtext(8, \"seconds remaining\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵtemplate(10, InterviewComponent_div_10_Template, 9, 5, \"div\", 8)(11, InterviewComponent_div_11_Template, 6, 0, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11);\n          i0.ɵɵtemplate(14, InterviewComponent_span_14_Template, 2, 0, \"span\", 12)(15, InterviewComponent_span_15_Template, 2, 0, \"span\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 13);\n          i0.ɵɵtext(17, \" \\u26A0\\uFE0F Do not switch tabs or windows - this will end the interview \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.isThinkingPhase));\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"width\", ctx.progress, \"%\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1, ctx.countdown <= 3));\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.countdown, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentQuestion && !ctx.isThinkingPhase);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isThinkingPhase);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isThinkingPhase);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isThinkingPhase);\n        }\n      },\n      dependencies: [CommonModule, i3.NgClass, i3.NgForOf, i3.NgIf],\n      styles: [\".interview-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 2rem;\\n  background: linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%);\\n  color: #1e293b;\\n  transition: background 0.8s ease;\\n  min-height: 100vh;\\n}\\n\\n.interview-container.thinking-phase[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #dbeafe 0%, #3b82f6 100%);\\n  color: white;\\n}\\n\\n.interview-header[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 800px;\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n\\n.progress-bar[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 8px;\\n  background-color: rgba(148, 163, 184, 0.3);\\n  border-radius: 4px;\\n  overflow: hidden;\\n  margin-bottom: 2rem;\\n}\\n\\n.progress-fill[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: linear-gradient(90deg, #059669 0%, #34d399 100%);\\n  transition: width 0.3s ease;\\n}\\n\\n.timer-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.timer[_ngcontent-%COMP%] {\\n  font-size: 4rem;\\n  font-weight: 700;\\n  color: #059669;\\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.1);\\n  transition: color 0.3s ease;\\n  font-variant-numeric: tabular-nums;\\n  min-width: 120px;\\n  text-align: center;\\n}\\n\\n.timer.warning[_ngcontent-%COMP%] {\\n  color: #dc2626;\\n  animation: _ngcontent-%COMP%_pulse 1s infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0%, 100% { transform: scale(1); }\\n  50% { transform: scale(1.05); }\\n}\\n\\n.timer-label[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n  opacity: 0.7;\\n  font-weight: 500;\\n}\\n\\n.interview-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  max-width: 800px;\\n}\\n\\n.question-section[_ngcontent-%COMP%] {\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.question-number[_ngcontent-%COMP%] {\\n  font-size: 1.125rem;\\n  font-weight: 600;\\n  color: #059669;\\n  margin-bottom: 2rem;\\n}\\n\\n.thinking-phase[_ngcontent-%COMP%]   .question-number[_ngcontent-%COMP%] {\\n  color: #fbbf24;\\n}\\n\\n.question-text[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  font-weight: 600;\\n  line-height: 1.4;\\n  color: #1e293b;\\n  text-align: center;\\n  padding: 2rem;\\n  background: rgba(255, 255, 255, 0.9);\\n  border-radius: 1rem;\\n  box-shadow: 0 10px 30px rgba(0,0,0,0.1);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n}\\n\\n.thinking-section[_ngcontent-%COMP%] {\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.thinking-text[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2.5rem;\\n  font-weight: 700;\\n  margin-bottom: 1rem;\\n  color: white;\\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\\n}\\n\\n.thinking-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1.25rem;\\n  opacity: 0.9;\\n  color: white;\\n}\\n\\n.interview-footer[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 800px;\\n  text-align: center;\\n  margin-top: 2rem;\\n}\\n\\n.instruction-text[_ngcontent-%COMP%] {\\n  font-size: 1.125rem;\\n  font-weight: 500;\\n  margin-bottom: 1rem;\\n  color: #059669;\\n}\\n\\n.thinking-phase[_ngcontent-%COMP%]   .instruction-text[_ngcontent-%COMP%] {\\n  color: #fbbf24;\\n}\\n\\n.warning-text[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  color: #dc2626;\\n  font-weight: 500;\\n  background: rgba(220, 38, 38, 0.1);\\n  padding: 0.75rem 1.5rem;\\n  border-radius: 0.5rem;\\n  border: 1px solid rgba(220, 38, 38, 0.2);\\n}\\n\\n.thinking-phase[_ngcontent-%COMP%]   .warning-text[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  color: #fbbf24;\\n  border-color: rgba(255, 255, 255, 0.2);\\n}\\n\\n@media (max-width: 768px) {\\n  .interview-container[_ngcontent-%COMP%] {\\n    padding: 1rem;\\n  }\\n  \\n  .timer[_ngcontent-%COMP%] {\\n    font-size: 3rem;\\n    min-width: 90px;\\n  }\\n  \\n  .question-text[_ngcontent-%COMP%] {\\n    font-size: 1.5rem;\\n    padding: 1.5rem;\\n  }\\n  \\n  .thinking-text[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 2rem;\\n  }\\n  \\n  .thinking-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9pbnRlcnZpZXcvaW50ZXJ2aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsYUFBYTtFQUNiLDZEQUE2RDtFQUM3RCxjQUFjO0VBQ2QsZ0NBQWdDO0VBQ2hDLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDZEQUE2RDtFQUM3RCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLDBDQUEwQztFQUMxQyxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWiw0REFBNEQ7RUFDNUQsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsd0NBQXdDO0VBQ3hDLDJCQUEyQjtFQUMzQixrQ0FBa0M7RUFDbEMsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxXQUFXLG1CQUFtQixFQUFFO0VBQ2hDLE1BQU0sc0JBQXNCLEVBQUU7QUFDaEM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLE9BQU87RUFDUCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixvQ0FBb0M7RUFDcEMsbUJBQW1CO0VBQ25CLHVDQUF1QztFQUN2QyxtQ0FBMkI7VUFBM0IsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWix3Q0FBd0M7QUFDMUM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsa0NBQWtDO0VBQ2xDLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLGNBQWM7RUFDZCxzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGVBQWU7SUFDZixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmludGVydmlldy1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZmZmZmYgMCUsICNmMWY1ZjkgMTAwJSk7XG4gIGNvbG9yOiAjMWUyOTNiO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuOHMgZWFzZTtcbiAgbWluLWhlaWdodDogMTAwdmg7XG59XG5cbi5pbnRlcnZpZXctY29udGFpbmVyLnRoaW5raW5nLXBoYXNlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2RiZWFmZSAwJSwgIzNiODJmNiAxMDAlKTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW50ZXJ2aWV3LWhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5cbi5wcm9ncmVzcy1iYXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTQ4LCAxNjMsIDE4NCwgMC4zKTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuXG4ucHJvZ3Jlc3MtZmlsbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMDU5NjY5IDAlLCAjMzRkMzk5IDEwMCUpO1xuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2U7XG59XG5cbi50aW1lci1zZWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjVyZW07XG59XG5cbi50aW1lciB7XG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwNTk2Njk7XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDRweCByZ2JhKDAsMCwwLDAuMSk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcbiAgZm9udC12YXJpYW50LW51bWVyaWM6IHRhYnVsYXItbnVtcztcbiAgbWluLXdpZHRoOiAxMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGltZXIud2FybmluZyB7XG4gIGNvbG9yOiAjZGMyNjI2O1xuICBhbmltYXRpb246IHB1bHNlIDFzIGluZmluaXRlO1xufVxuXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUsIDEwMCUgeyB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4gIDUwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IH1cbn1cblxuLnRpbWVyLWxhYmVsIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBvcGFjaXR5OiAwLjc7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5pbnRlcnZpZXctY29udGVudCB7XG4gIGZsZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbn1cblxuLnF1ZXN0aW9uLXNlY3Rpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucXVlc3Rpb24tbnVtYmVyIHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMwNTk2Njk7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5cbi50aGlua2luZy1waGFzZSAucXVlc3Rpb24tbnVtYmVyIHtcbiAgY29sb3I6ICNmYmJmMjQ7XG59XG5cbi5xdWVzdGlvbi10ZXh0IHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS40O1xuICBjb2xvcjogIzFlMjkzYjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAycmVtO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gIGJveC1zaGFkb3c6IDAgMTBweCAzMHB4IHJnYmEoMCwwLDAsMC4xKTtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpO1xufVxuXG4udGhpbmtpbmctc2VjdGlvbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50aGlua2luZy10ZXh0IGgyIHtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1zaGFkb3c6IDJweCAycHggNHB4IHJnYmEoMCwwLDAsMC4zKTtcbn1cblxuLnRoaW5raW5nLXRleHQgcCB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgb3BhY2l0eTogMC45O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5pbnRlcnZpZXctZm9vdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cblxuLmluc3RydWN0aW9uLXRleHQge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBjb2xvcjogIzA1OTY2OTtcbn1cblxuLnRoaW5raW5nLXBoYXNlIC5pbnN0cnVjdGlvbi10ZXh0IHtcbiAgY29sb3I6ICNmYmJmMjQ7XG59XG5cbi53YXJuaW5nLXRleHQge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBjb2xvcjogI2RjMjYyNjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgYmFja2dyb3VuZDogcmdiYSgyMjAsIDM4LCAzOCwgMC4xKTtcbiAgcGFkZGluZzogMC43NXJlbSAxLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMjAsIDM4LCAzOCwgMC4yKTtcbn1cblxuLnRoaW5raW5nLXBoYXNlIC53YXJuaW5nLXRleHQge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gIGNvbG9yOiAjZmJiZjI0O1xuICBib3JkZXItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbnRlcnZpZXctY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICB9XG4gIFxuICAudGltZXIge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICBtaW4td2lkdGg6IDkwcHg7XG4gIH1cbiAgXG4gIC5xdWVzdGlvbi10ZXh0IHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBwYWRkaW5nOiAxLjVyZW07XG4gIH1cbiAgXG4gIC50aGlua2luZy10ZXh0IGgyIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgXG4gIC50aGlua2luZy10ZXh0IHAge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Subscription","i0","ɵɵelementStart","ɵɵtwoWayListener","InterviewComponent_div_10_div_6_Template_input_ngModelChange_2_listener","$event","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","selectedAnswer","ɵɵresetView","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","option_r4","ɵɵtwoWayProperty","ɵɵtextInterpolate1","ɵɵtemplate","InterviewComponent_div_10_div_6_Template","ɵɵlistener","InterviewComponent_div_10_Template_button_click_7_listener","_r1","submitAnswer","ɵɵtextInterpolate2","currentQuestionIndex","questions","length","currentQuestion","question","options","InterviewComponent","constructor","questionService","router","ngZone","countdown","isThinkingPhase","isInterviewActive","questionsSubscription","correctAnswersCount","answeredCount","startTime","endTime","ngOnInit","enterFullScreen","loadQuestions","ngOnDestroy","exitFullScreen","clearTimer","unsubscribe","onFocusLoss","terminateInterview","getRandomQuestions","subscribe","next","startInterview","error","console","alert","navigate","Date","now","startQuestionTimer","countdownInterval","setInterval","run","nextQuestion","answerQuestion","isCorrect","current","correctAnswer","setTimeout","completeInterview","localStorage","setItem","removeItem","JSON","stringify","correctAnswers","answered","total","duration","Math","floor","clearInterval","elem","document","documentElement","requestFullscreen","result","catch","err","log","exitFullscreen","fullscreenElement","progress","ɵɵdirectiveInject","i1","QuestionService","i2","Router","NgZone","selectors","hostBindings","InterviewComponent_HostBindings","rf","ctx","InterviewComponent_blur_HostBindingHandler","ɵɵresolveWindow","InterviewComponent_beforeunload_HostBindingHandler","InterviewComponent_visibilitychange_HostBindingHandler","ɵɵresolveDocument","ɵɵelement","InterviewComponent_div_10_Template","InterviewComponent_div_11_Template","InterviewComponent_span_14_Template","InterviewComponent_span_15_Template","ɵɵpureFunction1","_c0","ɵɵstyleProp","_c1","i3","NgClass","NgForOf","NgIf","styles"],"sources":["C:\\Users\\Chouqib Saad\\Desktop\\projectv2\\src\\app\\components\\interview\\interview.component.ts","C:\\Users\\Chouqib Saad\\Desktop\\projectv2\\src\\app\\components\\interview\\interview.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, HostListener, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { QuestionService, Question } from '../../services/question.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-interview',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './interview.component.html',\n  styleUrls: ['./interview.component.css']\n})\nexport class InterviewComponent implements OnInit, OnDestroy {\n  questions: Question[] = [];\n  currentQuestionIndex = 0;\n  countdown = 10;\n  isThinkingPhase = false;\n  isInterviewActive = false;\n  private countdownInterval: any;\n  private questionsSubscription: Subscription = new Subscription();\n\n  selectedAnswer: string | null = null;\n\n  // Stats tracking\n  correctAnswersCount = 0;\n  answeredCount = 0;\n  startTime: number = 0;\n  endTime: number = 0;\n\n  constructor(\n    private questionService: QuestionService,\n    private router: Router,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.enterFullScreen();\n    this.loadQuestions();\n  }\n\n  ngOnDestroy(): void {\n    this.exitFullScreen();\n    this.clearTimer();\n    this.questionsSubscription.unsubscribe();\n  }\n\n  @HostListener('window:blur', ['$event'])\n  @HostListener('window:beforeunload', ['$event'])\n  @HostListener('document:visibilitychange', ['$event'])\n  onFocusLoss(): void {\n    if (this.isInterviewActive) {\n      this.terminateInterview();\n    }\n  }\n\n  private loadQuestions(): void {\n    this.questionsSubscription = this.questionService.getRandomQuestions().subscribe({\n      next: (questions) => {\n        this.questions = questions;\n        this.startInterview();\n      },\n      error: (error) => {\n        console.error('Error loading questions:', error);\n        alert('Failed to load questions. Please try again.');\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  private startInterview(): void {\n    this.isInterviewActive = true;\n    this.correctAnswersCount = 0;\n    this.answeredCount = 0;\n    this.startTime = Date.now();\n    this.startQuestionTimer();\n  }\n\n  private startQuestionTimer(): void {\n    this.clearTimer();\n    this.countdown = 10;\n    this.isThinkingPhase = false;\n    \n    this.countdownInterval = setInterval(() => {\n      this.ngZone.run(() => {\n        this.countdown--;\n        \n        if (this.countdown <= 0) {\n          this.nextQuestion();\n        }\n      });\n    }, 1000);\n  }\n\n  // Answer submission and tracking\n  answerQuestion(isCorrect: boolean) {\n    this.answeredCount++;\n    if (isCorrect) {\n      this.correctAnswersCount++;\n    }\n    this.selectedAnswer = null;\n    this.nextQuestion();\n  }\n\n  submitAnswer() {\n    if (this.selectedAnswer == null) return;\n    const current = this.currentQuestion;\n    const isCorrect = !!current && this.selectedAnswer === current?.correctAnswer;\n    this.answerQuestion(!!isCorrect);\n  }\n\n  private nextQuestion(): void {\n    this.clearTimer();\n    \n    if (this.currentQuestionIndex < this.questions.length - 1) {\n      this.isThinkingPhase = true;\n      setTimeout(() => {\n        this.isThinkingPhase = false;\n        this.currentQuestionIndex++;\n        this.startQuestionTimer();\n      }, 1500);\n    } else {\n      this.completeInterview();\n    }\n  }\n\n  private completeInterview(): void {\n    this.isInterviewActive = false;\n    this.clearTimer();\n    this.endTime = Date.now();\n    localStorage.setItem('interviewCompleted', 'true');\n    localStorage.removeItem('interviewStarted');\n    // Save stats to localStorage\n    localStorage.setItem('interviewStats', JSON.stringify({\n      correctAnswers: this.correctAnswersCount,\n      answered: this.answeredCount,\n      total: this.questions.length,\n      duration: Math.floor((this.endTime - this.startTime) / 1000) // in seconds\n    }));\n    this.router.navigate(['/final']);\n  }\n\n  private terminateInterview(): void {\n    this.isInterviewActive = false;\n    this.clearTimer();\n    this.endTime = Date.now();\n    localStorage.setItem('interviewCompleted', 'true');\n    localStorage.removeItem('interviewStarted');\n    // Save stats to localStorage\n    localStorage.setItem('interviewStats', JSON.stringify({\n      correctAnswers: this.correctAnswersCount,\n      answered: this.answeredCount,\n      total: this.questions.length,\n      duration: Math.floor((this.endTime - this.startTime) / 1000) // in seconds\n    }));\n    alert('Interview terminated due to focus loss. You will be redirected to the final screen.');\n    this.router.navigate(['/final']);\n  }\n\n  private clearTimer(): void {\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n      this.countdownInterval = null;\n    }\n  }\n\n  private enterFullScreen(): void {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      const result = elem.requestFullscreen();\n      if (result && typeof result.catch === 'function') {\n        result.catch(err => {\n          console.log('Failed to enter fullscreen:', err);\n        });\n      }\n    }\n  }\n\n  private exitFullScreen(): void {\n    if (document.exitFullscreen && document.fullscreenElement) {\n      document.exitFullscreen().catch(err => {\n        console.log('Failed to exit fullscreen:', err);\n      });\n    }\n  }\n\n  get currentQuestion(): Question | null {\n    return this.questions[this.currentQuestionIndex] || null;\n  }\n\n  get progress(): number {\n    return ((this.currentQuestionIndex + 1) / this.questions.length) * 100;\n  }\n}","<div class=\"interview-container fullscreen-overlay\" \n     [ngClass]=\"{'thinking-phase': isThinkingPhase}\">\n  \n  <div class=\"interview-header\">\n    <div class=\"progress-bar\">\n      <div class=\"progress-fill\" [style.width.%]=\"progress\"></div>\n    </div>\n    \n    <div class=\"timer-section\">\n      <div class=\"timer\" [ngClass]=\"{'warning': countdown <= 3}\">\n        {{ countdown }}\n      </div>\n      <span class=\"timer-label\">seconds remaining</span>\n    </div>\n  </div>\n\n  <div class=\"interview-content\">\n    <div class=\"question-section\" *ngIf=\"currentQuestion && !isThinkingPhase\">\n      <div class=\"question-number\">\n        Question {{ currentQuestionIndex + 1 }} of {{ questions.length }}\n      </div>\n      <div class=\"question-text fade-in\">\n        {{ currentQuestion.question }}\n      </div>\n      <div class=\"answer-options\">\n        <div *ngFor=\"let option of currentQuestion.options\" class=\"option-item\">\n          <label>\n            <input type=\"radio\" name=\"answer\" [value]=\"option\" [(ngModel)]=\"selectedAnswer\" />\n            {{ option }}\n          </label>\n        </div>\n      </div>\n      <button class=\"btn btn-primary\" [disabled]=\"!selectedAnswer\" (click)=\"submitAnswer()\">Submit Answer</button>\n    </div>\n\n    <div class=\"thinking-section\" *ngIf=\"isThinkingPhase\">\n      <div class=\"thinking-text fade-in\">\n        <h2>Thinking Time</h2>\n        <p>Take a moment to prepare for the next question</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"interview-footer\">\n    <div class=\"instruction-text\">\n      <span *ngIf=\"!isThinkingPhase\">Please answer the question above</span>\n      <span *ngIf=\"isThinkingPhase\">Get ready for the next question</span>\n    </div>\n    \n    <div class=\"warning-text\">\n      ⚠️ Do not switch tabs or windows - this will end the interview\n    </div>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}